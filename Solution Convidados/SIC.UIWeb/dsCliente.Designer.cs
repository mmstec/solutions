//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace EVENTOS.UIWeb {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsCliente")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsCliente : global::System.Data.DataSet {
        
        private ClienteDataTable tableCliente;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsCliente() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsCliente(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Cliente"] != null)) {
                    base.Tables.Add(new ClienteDataTable(ds.Tables["Cliente"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ClienteDataTable Cliente {
            get {
                return this.tableCliente;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsCliente cln = ((dsCliente)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Cliente"] != null)) {
                    base.Tables.Add(new ClienteDataTable(ds.Tables["Cliente"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableCliente = ((ClienteDataTable)(base.Tables["Cliente"]));
            if ((initTable == true)) {
                if ((this.tableCliente != null)) {
                    this.tableCliente.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsCliente";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsCliente.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableCliente = new ClienteDataTable();
            base.Tables.Add(this.tableCliente);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCliente() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsCliente ds = new dsCliente();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void ClienteRowChangeEventHandler(object sender, ClienteRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ClienteDataTable : global::System.Data.TypedTableBase<ClienteRow> {
            
            private global::System.Data.DataColumn columnControle;
            
            private global::System.Data.DataColumn columnCodigo;
            
            private global::System.Data.DataColumn columnNome;
            
            private global::System.Data.DataColumn columnEndereco;
            
            private global::System.Data.DataColumn columnBairro;
            
            private global::System.Data.DataColumn columnCidade;
            
            private global::System.Data.DataColumn columnEstado;
            
            private global::System.Data.DataColumn columnCep;
            
            private global::System.Data.DataColumn columnTelefone;
            
            private global::System.Data.DataColumn columnRefBan;
            
            private global::System.Data.DataColumn columnData;
            
            private global::System.Data.DataColumn columnlkTipo;
            
            private global::System.Data.DataColumn columnlkVendedor;
            
            private global::System.Data.DataColumn columnObs;
            
            private global::System.Data.DataColumn columneMail;
            
            private global::System.Data.DataColumn columnweb;
            
            private global::System.Data.DataColumn columnNumCartao;
            
            private global::System.Data.DataColumn columnValidade;
            
            private global::System.Data.DataColumn columnNomeImp;
            
            private global::System.Data.DataColumn columnLkCartao;
            
            private global::System.Data.DataColumn columnCodSeg;
            
            private global::System.Data.DataColumn columnCGC;
            
            private global::System.Data.DataColumn columnLimiteCred;
            
            private global::System.Data.DataColumn columnAtendBloq;
            
            private global::System.Data.DataColumn columnContato;
            
            private global::System.Data.DataColumn columnInsc;
            
            private global::System.Data.DataColumn columnAtividade;
            
            private global::System.Data.DataColumn columnFax;
            
            private global::System.Data.DataColumn columnTagFisica;
            
            private global::System.Data.DataColumn columnRefCom;
            
            private global::System.Data.DataColumn columnIdentidade;
            
            private global::System.Data.DataColumn columnNascimento;
            
            private global::System.Data.DataColumn columnFiliacao;
            
            private global::System.Data.DataColumn columnProfissao;
            
            private global::System.Data.DataColumn columnFoto;
            
            private global::System.Data.DataColumn columnSenha;
            
            private global::System.Data.DataColumn columnRetTrib;
            
            private global::System.Data.DataColumn columnCGI;
            
            private global::System.Data.DataColumn columnLkCliM;
            
            private global::System.Data.DataColumn columnBloqVendaCR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClienteDataTable() {
                this.TableName = "Cliente";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ClienteDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ClienteDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ControleColumn {
                get {
                    return this.columnControle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodigoColumn {
                get {
                    return this.columnCodigo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NomeColumn {
                get {
                    return this.columnNome;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnderecoColumn {
                get {
                    return this.columnEndereco;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BairroColumn {
                get {
                    return this.columnBairro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CidadeColumn {
                get {
                    return this.columnCidade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EstadoColumn {
                get {
                    return this.columnEstado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CepColumn {
                get {
                    return this.columnCep;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TelefoneColumn {
                get {
                    return this.columnTelefone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefBanColumn {
                get {
                    return this.columnRefBan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataColumn {
                get {
                    return this.columnData;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lkTipoColumn {
                get {
                    return this.columnlkTipo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lkVendedorColumn {
                get {
                    return this.columnlkVendedor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ObsColumn {
                get {
                    return this.columnObs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn eMailColumn {
                get {
                    return this.columneMail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn webColumn {
                get {
                    return this.columnweb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumCartaoColumn {
                get {
                    return this.columnNumCartao;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValidadeColumn {
                get {
                    return this.columnValidade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NomeImpColumn {
                get {
                    return this.columnNomeImp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LkCartaoColumn {
                get {
                    return this.columnLkCartao;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodSegColumn {
                get {
                    return this.columnCodSeg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CGCColumn {
                get {
                    return this.columnCGC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LimiteCredColumn {
                get {
                    return this.columnLimiteCred;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AtendBloqColumn {
                get {
                    return this.columnAtendBloq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContatoColumn {
                get {
                    return this.columnContato;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InscColumn {
                get {
                    return this.columnInsc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AtividadeColumn {
                get {
                    return this.columnAtividade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FaxColumn {
                get {
                    return this.columnFax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TagFisicaColumn {
                get {
                    return this.columnTagFisica;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefComColumn {
                get {
                    return this.columnRefCom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IdentidadeColumn {
                get {
                    return this.columnIdentidade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NascimentoColumn {
                get {
                    return this.columnNascimento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FiliacaoColumn {
                get {
                    return this.columnFiliacao;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProfissaoColumn {
                get {
                    return this.columnProfissao;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FotoColumn {
                get {
                    return this.columnFoto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SenhaColumn {
                get {
                    return this.columnSenha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RetTribColumn {
                get {
                    return this.columnRetTrib;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CGIColumn {
                get {
                    return this.columnCGI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LkCliMColumn {
                get {
                    return this.columnLkCliM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BloqVendaCRColumn {
                get {
                    return this.columnBloqVendaCR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClienteRow this[int index] {
                get {
                    return ((ClienteRow)(this.Rows[index]));
                }
            }
            
            public event ClienteRowChangeEventHandler ClienteRowChanging;
            
            public event ClienteRowChangeEventHandler ClienteRowChanged;
            
            public event ClienteRowChangeEventHandler ClienteRowDeleting;
            
            public event ClienteRowChangeEventHandler ClienteRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddClienteRow(ClienteRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClienteRow AddClienteRow(
                        string Codigo, 
                        string Nome, 
                        string Endereco, 
                        string Bairro, 
                        string Cidade, 
                        string Estado, 
                        string Cep, 
                        string Telefone, 
                        string RefBan, 
                        System.DateTime Data, 
                        int lkTipo, 
                        int lkVendedor, 
                        string Obs, 
                        string eMail, 
                        string web, 
                        string NumCartao, 
                        string Validade, 
                        string NomeImp, 
                        int LkCartao, 
                        string CodSeg, 
                        string CGC, 
                        double LimiteCred, 
                        bool AtendBloq, 
                        string Contato, 
                        string Insc, 
                        string Atividade, 
                        string Fax, 
                        bool TagFisica, 
                        string RefCom, 
                        string Identidade, 
                        System.DateTime Nascimento, 
                        string Filiacao, 
                        string Profissao, 
                        byte[] Foto, 
                        string Senha, 
                        short RetTrib, 
                        bool CGI, 
                        int LkCliM, 
                        bool BloqVendaCR) {
                ClienteRow rowClienteRow = ((ClienteRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Codigo,
                        Nome,
                        Endereco,
                        Bairro,
                        Cidade,
                        Estado,
                        Cep,
                        Telefone,
                        RefBan,
                        Data,
                        lkTipo,
                        lkVendedor,
                        Obs,
                        eMail,
                        web,
                        NumCartao,
                        Validade,
                        NomeImp,
                        LkCartao,
                        CodSeg,
                        CGC,
                        LimiteCred,
                        AtendBloq,
                        Contato,
                        Insc,
                        Atividade,
                        Fax,
                        TagFisica,
                        RefCom,
                        Identidade,
                        Nascimento,
                        Filiacao,
                        Profissao,
                        Foto,
                        Senha,
                        RetTrib,
                        CGI,
                        LkCliM,
                        BloqVendaCR};
                rowClienteRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowClienteRow);
                return rowClienteRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClienteRow FindByControle(int Controle) {
                return ((ClienteRow)(this.Rows.Find(new object[] {
                            Controle})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ClienteDataTable cln = ((ClienteDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ClienteDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnControle = base.Columns["Controle"];
                this.columnCodigo = base.Columns["Codigo"];
                this.columnNome = base.Columns["Nome"];
                this.columnEndereco = base.Columns["Endereco"];
                this.columnBairro = base.Columns["Bairro"];
                this.columnCidade = base.Columns["Cidade"];
                this.columnEstado = base.Columns["Estado"];
                this.columnCep = base.Columns["Cep"];
                this.columnTelefone = base.Columns["Telefone"];
                this.columnRefBan = base.Columns["RefBan"];
                this.columnData = base.Columns["Data"];
                this.columnlkTipo = base.Columns["lkTipo"];
                this.columnlkVendedor = base.Columns["lkVendedor"];
                this.columnObs = base.Columns["Obs"];
                this.columneMail = base.Columns["eMail"];
                this.columnweb = base.Columns["web"];
                this.columnNumCartao = base.Columns["NumCartao"];
                this.columnValidade = base.Columns["Validade"];
                this.columnNomeImp = base.Columns["NomeImp"];
                this.columnLkCartao = base.Columns["LkCartao"];
                this.columnCodSeg = base.Columns["CodSeg"];
                this.columnCGC = base.Columns["CGC"];
                this.columnLimiteCred = base.Columns["LimiteCred"];
                this.columnAtendBloq = base.Columns["AtendBloq"];
                this.columnContato = base.Columns["Contato"];
                this.columnInsc = base.Columns["Insc"];
                this.columnAtividade = base.Columns["Atividade"];
                this.columnFax = base.Columns["Fax"];
                this.columnTagFisica = base.Columns["TagFisica"];
                this.columnRefCom = base.Columns["RefCom"];
                this.columnIdentidade = base.Columns["Identidade"];
                this.columnNascimento = base.Columns["Nascimento"];
                this.columnFiliacao = base.Columns["Filiacao"];
                this.columnProfissao = base.Columns["Profissao"];
                this.columnFoto = base.Columns["Foto"];
                this.columnSenha = base.Columns["Senha"];
                this.columnRetTrib = base.Columns["RetTrib"];
                this.columnCGI = base.Columns["CGI"];
                this.columnLkCliM = base.Columns["LkCliM"];
                this.columnBloqVendaCR = base.Columns["BloqVendaCR"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnControle = new global::System.Data.DataColumn("Controle", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnControle);
                this.columnCodigo = new global::System.Data.DataColumn("Codigo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodigo);
                this.columnNome = new global::System.Data.DataColumn("Nome", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNome);
                this.columnEndereco = new global::System.Data.DataColumn("Endereco", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndereco);
                this.columnBairro = new global::System.Data.DataColumn("Bairro", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBairro);
                this.columnCidade = new global::System.Data.DataColumn("Cidade", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCidade);
                this.columnEstado = new global::System.Data.DataColumn("Estado", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstado);
                this.columnCep = new global::System.Data.DataColumn("Cep", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCep);
                this.columnTelefone = new global::System.Data.DataColumn("Telefone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTelefone);
                this.columnRefBan = new global::System.Data.DataColumn("RefBan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefBan);
                this.columnData = new global::System.Data.DataColumn("Data", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnData);
                this.columnlkTipo = new global::System.Data.DataColumn("lkTipo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlkTipo);
                this.columnlkVendedor = new global::System.Data.DataColumn("lkVendedor", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlkVendedor);
                this.columnObs = new global::System.Data.DataColumn("Obs", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObs);
                this.columneMail = new global::System.Data.DataColumn("eMail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columneMail);
                this.columnweb = new global::System.Data.DataColumn("web", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnweb);
                this.columnNumCartao = new global::System.Data.DataColumn("NumCartao", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumCartao);
                this.columnValidade = new global::System.Data.DataColumn("Validade", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValidade);
                this.columnNomeImp = new global::System.Data.DataColumn("NomeImp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNomeImp);
                this.columnLkCartao = new global::System.Data.DataColumn("LkCartao", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLkCartao);
                this.columnCodSeg = new global::System.Data.DataColumn("CodSeg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodSeg);
                this.columnCGC = new global::System.Data.DataColumn("CGC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCGC);
                this.columnLimiteCred = new global::System.Data.DataColumn("LimiteCred", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLimiteCred);
                this.columnAtendBloq = new global::System.Data.DataColumn("AtendBloq", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAtendBloq);
                this.columnContato = new global::System.Data.DataColumn("Contato", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContato);
                this.columnInsc = new global::System.Data.DataColumn("Insc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsc);
                this.columnAtividade = new global::System.Data.DataColumn("Atividade", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAtividade);
                this.columnFax = new global::System.Data.DataColumn("Fax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFax);
                this.columnTagFisica = new global::System.Data.DataColumn("TagFisica", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTagFisica);
                this.columnRefCom = new global::System.Data.DataColumn("RefCom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefCom);
                this.columnIdentidade = new global::System.Data.DataColumn("Identidade", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdentidade);
                this.columnNascimento = new global::System.Data.DataColumn("Nascimento", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNascimento);
                this.columnFiliacao = new global::System.Data.DataColumn("Filiacao", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiliacao);
                this.columnProfissao = new global::System.Data.DataColumn("Profissao", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProfissao);
                this.columnFoto = new global::System.Data.DataColumn("Foto", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFoto);
                this.columnSenha = new global::System.Data.DataColumn("Senha", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSenha);
                this.columnRetTrib = new global::System.Data.DataColumn("RetTrib", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRetTrib);
                this.columnCGI = new global::System.Data.DataColumn("CGI", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCGI);
                this.columnLkCliM = new global::System.Data.DataColumn("LkCliM", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLkCliM);
                this.columnBloqVendaCR = new global::System.Data.DataColumn("BloqVendaCR", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBloqVendaCR);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnControle}, true));
                this.columnControle.AutoIncrement = true;
                this.columnControle.AutoIncrementSeed = -1;
                this.columnControle.AutoIncrementStep = -1;
                this.columnControle.AllowDBNull = false;
                this.columnControle.ReadOnly = true;
                this.columnControle.Unique = true;
                this.columnCodigo.MaxLength = 8;
                this.columnNome.MaxLength = 50;
                this.columnEndereco.MaxLength = 40;
                this.columnBairro.MaxLength = 20;
                this.columnCidade.MaxLength = 30;
                this.columnEstado.MaxLength = 2;
                this.columnCep.MaxLength = 9;
                this.columnTelefone.MaxLength = 30;
                this.columnRefBan.MaxLength = 30;
                this.columnObs.MaxLength = 2147483647;
                this.columneMail.MaxLength = 40;
                this.columnweb.MaxLength = 80;
                this.columnNumCartao.MaxLength = 17;
                this.columnValidade.MaxLength = 7;
                this.columnNomeImp.MaxLength = 40;
                this.columnCodSeg.MaxLength = 3;
                this.columnCGC.MaxLength = 18;
                this.columnContato.MaxLength = 40;
                this.columnInsc.MaxLength = 20;
                this.columnAtividade.MaxLength = 40;
                this.columnFax.MaxLength = 20;
                this.columnRefCom.MaxLength = 30;
                this.columnIdentidade.MaxLength = 20;
                this.columnFiliacao.MaxLength = 60;
                this.columnProfissao.MaxLength = 30;
                this.columnSenha.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClienteRow NewClienteRow() {
                return ((ClienteRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ClienteRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ClienteRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ClienteRowChanged != null)) {
                    this.ClienteRowChanged(this, new ClienteRowChangeEvent(((ClienteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ClienteRowChanging != null)) {
                    this.ClienteRowChanging(this, new ClienteRowChangeEvent(((ClienteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ClienteRowDeleted != null)) {
                    this.ClienteRowDeleted(this, new ClienteRowChangeEvent(((ClienteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ClienteRowDeleting != null)) {
                    this.ClienteRowDeleting(this, new ClienteRowChangeEvent(((ClienteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveClienteRow(ClienteRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsCliente ds = new dsCliente();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ClienteDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ClienteRow : global::System.Data.DataRow {
            
            private ClienteDataTable tableCliente;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ClienteRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCliente = ((ClienteDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Controle {
                get {
                    return ((int)(this[this.tableCliente.ControleColumn]));
                }
                set {
                    this[this.tableCliente.ControleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Codigo {
                get {
                    try {
                        return ((string)(this[this.tableCliente.CodigoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Codigo\' in table \'Cliente\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCliente.CodigoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nome {
                get {
                    try {
                        return ((string)(this[this.tableCliente.NomeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nome\' in table \'Cliente\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCliente.NomeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Endereco {
                get {
                    try {
                        return ((string)(this[this.tableCliente.EnderecoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Endereco\' in table \'Cliente\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCliente.EnderecoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bairro {
                get {
                    try {
                        return ((string)(this[this.tableCliente.BairroColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bairro\' in table \'Cliente\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCliente.BairroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cidade {
                get {
                    try {
                        return ((string)(this[this.tableCliente.CidadeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cidade\' in table \'Cliente\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCliente.CidadeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Estado {
                get {
                    try {
                        return ((string)(this[this.tableCliente.EstadoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Estado\' in table \'Cliente\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCliente.EstadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cep {
                get {
                    try {
                        return ((string)(this[this.tableCliente.CepColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cep\' in table \'Cliente\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCliente.CepColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Telefone {
                get {
                    try {
                        return ((string)(this[this.tableCliente.TelefoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Telefone\' in table \'Cliente\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCliente.TelefoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RefBan {
                get {
                    try {
                        return ((string)(this[this.tableCliente.RefBanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RefBan\' in table \'Cliente\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCliente.RefBanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Data {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCliente.DataColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Data\' in table \'Cliente\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCliente.DataColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int lkTipo {
                get {
                    try {
                        return ((int)(this[this.tableCliente.lkTipoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'lkTipo\' in table \'Cliente\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCliente.lkTipoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int lkVendedor {
                get {
                    try {
                        return ((int)(this[this.tableCliente.lkVendedorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'lkVendedor\' in table \'Cliente\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCliente.lkVendedorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Obs {
                get {
                    try {
                        return ((string)(this[this.tableCliente.ObsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Obs\' in table \'Cliente\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCliente.ObsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string eMail {
                get {
                    try {
                        return ((string)(this[this.tableCliente.eMailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'eMail\' in table \'Cliente\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCliente.eMailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string web {
                get {
                    try {
                        return ((string)(this[this.tableCliente.webColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'web\' in table \'Cliente\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCliente.webColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NumCartao {
                get {
                    try {
                        return ((string)(this[this.tableCliente.NumCartaoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumCartao\' in table \'Cliente\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCliente.NumCartaoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Validade {
                get {
                    try {
                        return ((string)(this[this.tableCliente.ValidadeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Validade\' in table \'Cliente\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCliente.ValidadeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NomeImp {
                get {
                    try {
                        return ((string)(this[this.tableCliente.NomeImpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NomeImp\' in table \'Cliente\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCliente.NomeImpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LkCartao {
                get {
                    try {
                        return ((int)(this[this.tableCliente.LkCartaoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LkCartao\' in table \'Cliente\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCliente.LkCartaoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodSeg {
                get {
                    try {
                        return ((string)(this[this.tableCliente.CodSegColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodSeg\' in table \'Cliente\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCliente.CodSegColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CGC {
                get {
                    try {
                        return ((string)(this[this.tableCliente.CGCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CGC\' in table \'Cliente\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCliente.CGCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LimiteCred {
                get {
                    try {
                        return ((double)(this[this.tableCliente.LimiteCredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LimiteCred\' in table \'Cliente\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCliente.LimiteCredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool AtendBloq {
                get {
                    try {
                        return ((bool)(this[this.tableCliente.AtendBloqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AtendBloq\' in table \'Cliente\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCliente.AtendBloqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Contato {
                get {
                    try {
                        return ((string)(this[this.tableCliente.ContatoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Contato\' in table \'Cliente\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCliente.ContatoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Insc {
                get {
                    try {
                        return ((string)(this[this.tableCliente.InscColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Insc\' in table \'Cliente\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCliente.InscColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Atividade {
                get {
                    try {
                        return ((string)(this[this.tableCliente.AtividadeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Atividade\' in table \'Cliente\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCliente.AtividadeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Fax {
                get {
                    try {
                        return ((string)(this[this.tableCliente.FaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fax\' in table \'Cliente\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCliente.FaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool TagFisica {
                get {
                    try {
                        return ((bool)(this[this.tableCliente.TagFisicaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TagFisica\' in table \'Cliente\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCliente.TagFisicaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RefCom {
                get {
                    try {
                        return ((string)(this[this.tableCliente.RefComColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RefCom\' in table \'Cliente\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCliente.RefComColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Identidade {
                get {
                    try {
                        return ((string)(this[this.tableCliente.IdentidadeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Identidade\' in table \'Cliente\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCliente.IdentidadeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Nascimento {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCliente.NascimentoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nascimento\' in table \'Cliente\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCliente.NascimentoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Filiacao {
                get {
                    try {
                        return ((string)(this[this.tableCliente.FiliacaoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Filiacao\' in table \'Cliente\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCliente.FiliacaoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Profissao {
                get {
                    try {
                        return ((string)(this[this.tableCliente.ProfissaoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Profissao\' in table \'Cliente\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCliente.ProfissaoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] Foto {
                get {
                    try {
                        return ((byte[])(this[this.tableCliente.FotoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Foto\' in table \'Cliente\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCliente.FotoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Senha {
                get {
                    try {
                        return ((string)(this[this.tableCliente.SenhaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Senha\' in table \'Cliente\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCliente.SenhaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short RetTrib {
                get {
                    try {
                        return ((short)(this[this.tableCliente.RetTribColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RetTrib\' in table \'Cliente\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCliente.RetTribColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool CGI {
                get {
                    try {
                        return ((bool)(this[this.tableCliente.CGIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CGI\' in table \'Cliente\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCliente.CGIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LkCliM {
                get {
                    try {
                        return ((int)(this[this.tableCliente.LkCliMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LkCliM\' in table \'Cliente\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCliente.LkCliMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool BloqVendaCR {
                get {
                    try {
                        return ((bool)(this[this.tableCliente.BloqVendaCRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BloqVendaCR\' in table \'Cliente\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCliente.BloqVendaCRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodigoNull() {
                return this.IsNull(this.tableCliente.CodigoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodigoNull() {
                this[this.tableCliente.CodigoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNomeNull() {
                return this.IsNull(this.tableCliente.NomeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNomeNull() {
                this[this.tableCliente.NomeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnderecoNull() {
                return this.IsNull(this.tableCliente.EnderecoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnderecoNull() {
                this[this.tableCliente.EnderecoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBairroNull() {
                return this.IsNull(this.tableCliente.BairroColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBairroNull() {
                this[this.tableCliente.BairroColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCidadeNull() {
                return this.IsNull(this.tableCliente.CidadeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCidadeNull() {
                this[this.tableCliente.CidadeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEstadoNull() {
                return this.IsNull(this.tableCliente.EstadoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEstadoNull() {
                this[this.tableCliente.EstadoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCepNull() {
                return this.IsNull(this.tableCliente.CepColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCepNull() {
                this[this.tableCliente.CepColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTelefoneNull() {
                return this.IsNull(this.tableCliente.TelefoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTelefoneNull() {
                this[this.tableCliente.TelefoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRefBanNull() {
                return this.IsNull(this.tableCliente.RefBanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRefBanNull() {
                this[this.tableCliente.RefBanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataNull() {
                return this.IsNull(this.tableCliente.DataColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataNull() {
                this[this.tableCliente.DataColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslkTipoNull() {
                return this.IsNull(this.tableCliente.lkTipoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlkTipoNull() {
                this[this.tableCliente.lkTipoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslkVendedorNull() {
                return this.IsNull(this.tableCliente.lkVendedorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlkVendedorNull() {
                this[this.tableCliente.lkVendedorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsObsNull() {
                return this.IsNull(this.tableCliente.ObsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetObsNull() {
                this[this.tableCliente.ObsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IseMailNull() {
                return this.IsNull(this.tableCliente.eMailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SeteMailNull() {
                this[this.tableCliente.eMailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IswebNull() {
                return this.IsNull(this.tableCliente.webColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetwebNull() {
                this[this.tableCliente.webColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumCartaoNull() {
                return this.IsNull(this.tableCliente.NumCartaoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumCartaoNull() {
                this[this.tableCliente.NumCartaoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValidadeNull() {
                return this.IsNull(this.tableCliente.ValidadeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValidadeNull() {
                this[this.tableCliente.ValidadeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNomeImpNull() {
                return this.IsNull(this.tableCliente.NomeImpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNomeImpNull() {
                this[this.tableCliente.NomeImpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLkCartaoNull() {
                return this.IsNull(this.tableCliente.LkCartaoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLkCartaoNull() {
                this[this.tableCliente.LkCartaoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodSegNull() {
                return this.IsNull(this.tableCliente.CodSegColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodSegNull() {
                this[this.tableCliente.CodSegColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCGCNull() {
                return this.IsNull(this.tableCliente.CGCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCGCNull() {
                this[this.tableCliente.CGCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLimiteCredNull() {
                return this.IsNull(this.tableCliente.LimiteCredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLimiteCredNull() {
                this[this.tableCliente.LimiteCredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAtendBloqNull() {
                return this.IsNull(this.tableCliente.AtendBloqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAtendBloqNull() {
                this[this.tableCliente.AtendBloqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContatoNull() {
                return this.IsNull(this.tableCliente.ContatoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContatoNull() {
                this[this.tableCliente.ContatoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInscNull() {
                return this.IsNull(this.tableCliente.InscColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInscNull() {
                this[this.tableCliente.InscColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAtividadeNull() {
                return this.IsNull(this.tableCliente.AtividadeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAtividadeNull() {
                this[this.tableCliente.AtividadeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFaxNull() {
                return this.IsNull(this.tableCliente.FaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFaxNull() {
                this[this.tableCliente.FaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTagFisicaNull() {
                return this.IsNull(this.tableCliente.TagFisicaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTagFisicaNull() {
                this[this.tableCliente.TagFisicaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRefComNull() {
                return this.IsNull(this.tableCliente.RefComColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRefComNull() {
                this[this.tableCliente.RefComColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIdentidadeNull() {
                return this.IsNull(this.tableCliente.IdentidadeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIdentidadeNull() {
                this[this.tableCliente.IdentidadeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNascimentoNull() {
                return this.IsNull(this.tableCliente.NascimentoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNascimentoNull() {
                this[this.tableCliente.NascimentoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFiliacaoNull() {
                return this.IsNull(this.tableCliente.FiliacaoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFiliacaoNull() {
                this[this.tableCliente.FiliacaoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProfissaoNull() {
                return this.IsNull(this.tableCliente.ProfissaoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProfissaoNull() {
                this[this.tableCliente.ProfissaoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFotoNull() {
                return this.IsNull(this.tableCliente.FotoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFotoNull() {
                this[this.tableCliente.FotoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSenhaNull() {
                return this.IsNull(this.tableCliente.SenhaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSenhaNull() {
                this[this.tableCliente.SenhaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRetTribNull() {
                return this.IsNull(this.tableCliente.RetTribColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRetTribNull() {
                this[this.tableCliente.RetTribColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCGINull() {
                return this.IsNull(this.tableCliente.CGIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCGINull() {
                this[this.tableCliente.CGIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLkCliMNull() {
                return this.IsNull(this.tableCliente.LkCliMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLkCliMNull() {
                this[this.tableCliente.LkCliMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBloqVendaCRNull() {
                return this.IsNull(this.tableCliente.BloqVendaCRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBloqVendaCRNull() {
                this[this.tableCliente.BloqVendaCRColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ClienteRowChangeEvent : global::System.EventArgs {
            
            private ClienteRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClienteRowChangeEvent(ClienteRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClienteRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591